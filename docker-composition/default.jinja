{%- from "docker-composition/map.jinja" import cfg with context %}

{%- for cname, composition in salt['pillar.get']('docker-composition', {}).items() %}
{%- set cpath = cfg.base + '/compose/' + cname %}

{%- if composition is mapping and composition.get('enabled') and composition.get('type') == ctype %}

{%- if composition.compose is defined %}

{%- block compose scoped %}
{{ cpath }}:
  file.directory:
    - makedirs: True
    - clean: True

{{ cpath }}/docker-compose.yml:
  file.serialize:
    - formatter: yaml
    # docker-compose cfg is managed in pillar so it is easily overridable
    - dataset: {{ composition.compose | json }}
    - makedirs: True
    - require_in:
      - file: {{ cpath }}
{%- endblock compose %}
{%- endif %}

{%- if composition.secret is defined %}
{%- block secret scoped %}
{{ cpath }}/secrets:
  file.directory:
    - makedirs: True
    - clean: true
    - require_in:
      - file: {{ cpath }}
{%- for secret, secretcfg in composition.secret.items() %}
{{ cpath }}/secrets/{{ secret }}:
{%- if secretcfg.serialize is defined %}
  file.serialize:
    - formatter: {{ secretcfg.serialize }}
  {%- if secretcfg.pillar is defined %}
    - dataset_pillar: {{ secretcfg.pillar }}
  {%- elif secretcfg.contents is defined  %}
    - dataset: {{ secretcfg.contents | json }}
  {%- endif %}
{%- else %}
  file.managed:
  {%- if secretcfg.pillar is defined %}
    - contents_pillar: {{ secretcfg.pillar }}
  {%- elif secretcfg.contents is defined  %}
    - contents: {{ secretcfg.contents | json }}
  {%- else %}
    - contents: {{ secretcfg | json }}
  {%- endif %}
    - contents_newline: True
{%- endif %}
{%- if secretcfg.user is defined %}
    - user: {{ secretcfg.user }}
{%- endif %}
{%- if secretcfg.group is defined %}
    - group: {{ secretcfg.group }}
{%- endif %}
{%- if secretcfg.mode is defined %}
    - mode: {{ secretcfg.mode }}
{%- endif %}
{%- if secretcfg.dir_mode is defined %}
    - dir_mode: {{ secretcfg.dir_mode }}
{%- else %}
    - dir_mode: 0755
{%- endif %}
    - makedirs: True
    - require_in:
      - file: {{ cpath }}/secrets
{%- endfor %}
{%- endblock secret %}
{%- endif %}

{%- if composition.directory is defined %}
{%- block directory scoped %}
{%- for dir, dircfg in composition.directory.items() %}
{{ cpath }}/{{ dir }}:
  file.directory:
    - makedirs: True
    - clean: {{ dircfg.get('clean', True) }}
    - require_in:
      - file: {{ cpath }}

{%- if dircfg.file is defined %}
{%- for file, filecfg in dircfg.file.items() %}
{{ cpath }}/{{ dir }}/{{ file }}:
{%- if filecfg.serialize is defined %}
  file.serialize:
    - formatter: {{ filecfg.serialize }}
  {%- if filecfg.contents is defined  %}
    - dataset: {{ filecfg.contents|json }}
  {%- elif filecfg.contents_pillar is defined %}
    - dataset_pillar: {{ filecfg.contents_pillar }}
  {%- endif %}
{%- else %}
  file.managed:
    {%- if filecfg.source is defined %}
    - source: {{ filecfg.source }}
    {%- if filecfg.hash is defined %}
    - source_hash: {{ filecfg.hash }}
    {%- else %}
    - skip_verify: True
    {%- endif %}
    {%- if filecfg.template is defined %}
    - template: {{ filecfg.template }}
    {%- endif %}
    {%- elif filecfg.contents is defined %}
    - contents: {{ filecfg.contents|json }}
    {%- elif filecfg.contents_pillar is defined %}
    - contents_pillar: {{ filecfg.contents_pillar }}
    {%- elif filecfg.contents_grains is defined %}
    - contents_grains: {{ filecfg.contents_grains }}
    {%- endif %}
{%- endif %}
    - contents_newline: {{ filecfg.get('contents_newline', 'True') }}
    - makedirs: {{ filecfg.get('makedirs', 'True') }}
    {%- if filecfg.user is defined %}
    - user: {{ filecfg.user }}
    {%- endif %}
    {%- if filecfg.group is defined %}
    - group: {{ filecfg.group }}
    {%- endif %}
    {%- if filecfg.mode is defined %}
    - mode: {{ filecfg.mode }}
    {%- endif %}
    {%- if filecfg.dir_mode is defined %}
    - dir_mode: {{ filecfg.dir_mode }}
    {%- endif %}
    {%- if filecfg.encoding is defined %}
    - encoding: {{ filecfg.encoding }}
    {%- endif %}
    - require_in:
      - file: {{ cpath }}/{{ dir }}
{%- endfor %}
{%- endif %}

{%- endfor %}
{%- endblock directory %}
{%- endif %}

{%- block main scoped %}{%- endblock main %}

{%- endif %}
{%- endfor %}
