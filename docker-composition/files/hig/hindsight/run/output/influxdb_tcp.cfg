filename = "influxdb_tcp.lua"
message_matcher = "{{ cfg['message_matcher'] }}"
ticker_interval = {{ cfg.get('ticker_interval', 60) }}

-- Override of default sandbox configuration variables
{%- for key in ['output_limit', 'memory_limit', 'instruction_limit', 'preserve_data', 'restricted_headers', 'shutdown_on_terminate', 'remove_checkpoints_on_terminate', 'read_queue'] %}
{%- if key in cfg %}
    {%- if key in ['read_queue'] %}
{{ key }} = "{{ cfg[key] }}"
    {%- else %}
{{ key }} = {{ cfg[key] }}
    {%- endif %}
{%- endif %}
{%- endfor %}

flush_count = {{ cfg.get('flush_count', 5000) }}
flush_on_shutdown = {{ cfg.get('flush_on_shutdown', 'true') }}
preserve_data = not flush_on_shutdown
{% if 'error_dir' in cfg -%}
error_dir = "{{ cfg['error_dir'] }}"
{% endif -%}

address = "{{ cfg.get('address', 'influxdb') }}"
port = {{ cfg.get('port', 8086) }}
timeout = {{ cfg.get('timeout', 30) }}

database = "{{ cfg['database'] }}"
user = "{{ cfg['user'] }}"
password = "{{ cfg['password'] }}"

encoders = {
{%- for measurement, mencoders in cfg.get('encoders', {}).iteritems() %}
    ["{{ measurement }}"] = {
    {%- for key, encoder in mencoders.iteritems() %}
        ["{{ key }}"] = "{{ encoder }}",
    {%- endfor %}
    },
{%- endfor %}
}
